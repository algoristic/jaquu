{"version":3,"sources":["assets/icons.js","context/ActionContext.js","components/AddTaskAction.js","components/Icon.js","components/Field.js","components/TaskChoice.js","components/Button.js","components/Dialogue.js","components/Input.js","components/TaskIcon.js","components/TaskDialogue.js","context/TimerFunctionContext.js","components/TimerButton.js","util/timeUtils.js","components/TimerOutput.js","components/TimerControl.js","assets/types.task.actions.js","assets/types.timer.actions.js","util/typeUtils.js","assets/types.timer.js","components/dialogue/TimerDialogue.js","assets/types.stopwatch.actions.js","assets/types.js","assets/types.stopwatch.js","components/dialogue/StopwatchDialogue.js","components/ChooseTaskType.js","components/ClickableOverlay.js","components/EditTaskDialogue.js","components/TaskAction.js","components/TaskActions.js","components/TaskName.js","components/TaskTimer.js","service/taskService.js","components/Task.js","util/objectUtils.js","components/NewTaskWizard.js","components/TaskEditorPanel.js","components/TaskGrid.js","util/UUID.js","components/VisualGrid.js","components/Board.js","components/ThemeControlButton.js","context/ThemeContext.js","assets/themes.js","components/ThemeSwitcher.js","service/themeService.js","components/Control.js","components/App.js","index.js"],"names":["library","add","faPlus","faBell","faClock","faTasks","faHourglassHalf","faCheck","faPlay","faTimes","faPause","faPencilAlt","faHistory","faTrashAlt","faSun","faMoon","ActionContext","React","createContext","onClick","children","className","name","size","icon","index","boardDimensions","action","dimensions","cols","columns","rows","row","Math","floor","column","x","y","accessible","dark","calculateProperties","style","width","height","Icon","type","callback","id","disabled","text","title","severity","condition","small","render","Dialoue","this","props","Component","value","placeholder","onChange","responsive","types","task","save","cancel","remove","editProperty","buttons","editType","maxWidth","Header","Main","htmlFor","e","target","Footer","TimerFuntionContext","amount","TimerFunctionContext","Consumer","fn","getTimeDifference","d1","d2","Date","flattenMilliseconds","getDifferenceToNow","date","time","toFixed","displayRemainingTime","displayTimeVariable","msec","result","dd","ddPresent","hh","hhPresent","mm","ss","now","getTime","display","TimerOutput","editTask","visible","edit","deleteTask","stopTimer","timer","stopped","runtime","lastStop","remaining","currentTime","startTimer","resetTimer","doCallback","timerFunction","getRemainingTime","editor","alterTime","bind","res","Provider","actions","timerActions","typeSpecific","stopStopwatch","stopwatch","measuredTime","startStopwatch","resetStopwatch","displayRunningTime","stopwatchActions","choices","Object","values","map","key","taskType","createElement","TaskTimer","state","setInterval","setState","TaskService","getTasks","tasks","window","localStorage","getItem","JSON","parse","saveTasks","stringify","setItem","getDefaultTaskName","num","forEach","createNewTask","position","renderTaskWidgets","data-grid","w","h","isResizable","renderTaskWidget","setPropertyValue","obj","property","NewTaskWizard","step","fade","setType","saveTask","closeWizard","editTaskProperty","chosenType","setTimeout","active","elem","EditTaskDialogue","TaskEditorPanel","TaskGrid","startPosition","undefined","findTask","moveTask","filter","x1","y1","endPosition","updateTask","x2","y2","taskWidgets","rowHeight","margin","preventollision","compactType","onDragStop","_unused1","_unused2","onDragStart","UUID","replace","c","crypto","getRandomValues","Uint8Array","toString","fields","Board","taskService","document","documentElement","clientWidth","clientHeight","createNew","addTask","cancelEdit","windowSize","modifyTasks","cancelAddTask","calcBoardDimensions","addEventListener","xCorrection","yCorrection","newPosition","assign","toBeSaved","getRandom","push","toBeDeleted","i","marginRight","marginBottom","theme","setTheme","button","color","background","ThemeContext","light","ThemeSwitcher","isActive","themes","ThemeService","getTheme","storedTheme","themeId","filteredThemes","length","App","themeService","icons","WebFont","load","google","families","ReactDOM","querySelector"],"mappings":"wuBAIe,EACL,WACFA,IAAQC,IAAIC,IAAQC,IAAQC,IAASC,IAASC,IAAiBC,IAASC,IACpEC,IAASC,IAASC,IAAaC,IAAWC,IAAYC,IAAOC,M,mCCH1DC,EAFOC,IAAMC,cAAc,UCE3B,G,MAAA,YAAiC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC/B,OACI,yBAAKC,UAAU,kBAAkBF,QAASA,GACtC,yBAAKE,UAAU,mBAEXD,M,QCND,cAAmC,IAAxBE,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMJ,EAAW,EAAXA,QAClC,OACI,0BAAMA,QAASA,GACX,kBAAC,IAAD,CAAiBK,KAAMF,EAAMD,UAAWE,EAAQ,MAAQA,EAAQ,O,MCuB7D,kBAAoD,IAAzCE,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,gBAAiBH,EAAgB,EAAhBA,KAAMI,EAAU,EAAVA,OAAU,EAvBlE,SAA6BF,EAAOG,GAChC,IACMC,EAAOD,EAAWE,QAClBC,EAAOH,EAAWG,KAClBC,EAAMC,KAAKC,MAAMT,EAAQI,GACzBM,EAASV,EAAQI,EAUvB,MAAO,CACHO,EAAGD,EACHE,EAAGL,EACHM,WAAcN,EAAMD,EAAK,GAAOI,EAASN,EAAK,EAC9CU,KAbDV,EAAO,IAAM,EACTG,EAAM,IAAM,EACHP,EAAQ,IAAM,EAEdA,EAAQ,IAAM,EAGlBA,EAAQ,IAAM,GAWOe,CAAoBf,EAAOC,GAArDU,EADuD,EACvDA,EAAGC,EADoD,EACpDA,EAAGC,EADiD,EACjDA,WAAYC,EADqC,EACrCA,KACzB,OACI,yBAAKlB,UAAW,UAAYkB,EAAO,OAAS,UAAYD,EAAa,cAAgB,IAAKG,MAAO,CAACC,MAAOnB,EAAMoB,OAAQpB,IACrHe,GACE,kBAAC,EAAD,CAAenB,QAAS,kBAAMQ,EAAO,CAACS,EAAGA,EAAGC,EAAGA,MAC3C,kBAACO,EAAD,CAAMtB,KAAK,OAAOC,KAAK,UC9BxB,G,MAAA,YAA8B,IAAnBsB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC5B,OACI,yBAAKzB,UAAU,iBAAiBF,QAAS,kBAAM2B,EAASD,EAAKE,MACzD,yBAAK1B,UAAU,gBACX,kBAACuB,EAAD,CAAMtB,KAAMuB,EAAKrB,KAAMD,KAAK,QAEhC,yBAAKF,UAAU,gBAAiBwB,EAAKvB,SCNlC,G,MAAA,YAAsG,IAA3FyB,EAA0F,EAA1FA,GAAI1B,EAAsF,EAAtFA,UAAWF,EAA2E,EAA3EA,QAAS6B,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,KAAMzB,EAAkD,EAAlDA,KAAM0B,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,MACnGa,GAAS,EAMb,MALwB,mBAAdF,EACNE,EAASF,EACmB,oBAAdA,IACdE,EAASF,KAENE,GACH,4BAAQP,GAAIA,EAAI1B,UAAW,QACnB8B,EAAY,OAASA,EAAY,aAEjCE,EAAQ,aAAe,KAEvBhC,EAAa,IAAMA,EAAa,IACjCF,QAASA,EAAS6B,SAAUA,EAC/BE,MAAOA,EAAOT,MAAOA,GACpBjB,GACG,0BAAMH,UAAU,YACZ,kBAACuB,EAAD,CAAMtB,KAAME,KAGpB,0BAAMH,UAAU,YAAa4B,MCgB1BM,G,6KAZD,IAAD,EACuBC,KAAKC,MAAzBrC,EADH,EACGA,SAAUqB,EADb,EACaA,MAClB,OACI,yBAAKpB,UAAU,YACX,yBAAKA,UAAU,gBAAgBoB,MAAOA,GAChCrB,O,iCA7BsB,IAAxBA,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACtB,OACI,yBAAKA,UAAW,mBAAqBA,EAAa,IAAMA,EAAa,KAC/DD,K,8BAKwB,IAAxBA,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACpB,OACI,yBAAKA,UAAW,iBAAmBA,EAAa,IAAMA,EAAa,KAC7DD,K,gCAK0B,IAAxBA,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACtB,OACI,yBAAKA,UAAW,mBAAqBA,EAAa,IAAMA,EAAa,KAC/DD,O,GArBIsC,cCAP,G,MAAA,YAAsE,IAA3DX,EAA0D,EAA1DA,GAAIY,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,SAAUb,EAAwB,EAAxBA,SAAUc,EAAc,EAAdA,WAIlE,OAHkB,IAAfA,IACCA,GAAa,GAGb,2BAAOf,GAAIA,EAAIF,KAAK,OAAOxB,UAAW,SAAWyC,EAAa,cAAgB,IAAKd,SAAUA,EAAUW,MAAOA,EAAOE,SAAUA,EAAUD,YAAaA,MCH/I,G,MAAA,YAA0B,IAAff,EAAc,EAAdA,KAAMtB,EAAQ,EAARA,KAC5B,OACI,yBAAKF,UAAU,qBACX,0BAAMA,UAAU,aACZ,kBAACuB,EAAD,CAAMtB,KAAMyC,EAAMlB,GAAMrB,KAAMD,KAAMA,QCDrC,G,MAAA,YAA2E,IAAhEyC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,OAAiBC,GAA0B,EAAnCC,QAAmC,EAA1BD,cAAchD,EAAY,EAAZA,SACjEyB,EAASmB,EAATnB,KACFyB,EAAWP,EAAMlB,GACvB,OACI,kBAAC,EAAD,CAAUJ,MAAO,CAAC8B,SAAU,MACxB,kBAAC,EAASC,OAAV,KACI,wBAAInD,UAAU,wBACRiD,EAAShD,KADf,IACsB,kBAAC,EAAD,CAAUuB,KAAMA,EAAMtB,KAAM,SAGtD,kBAAC,EAASkD,KAAV,KACI,2BAAOC,QAAQ,aAAf,QACA,kBAAC,EAAD,CAAO3B,GAAG,YAAYY,MAAOK,EAAK1C,KAAMuC,SAAU,SAAAc,GAAC,OAAIP,EAAa,OAAQO,EAAEC,OAAOjB,UACnFvC,GAEN,kBAAC,EAASyD,OAAV,CAAiBxD,UAAU,cACvB,kBAAC,EAAD,CAAQF,QAAS,kBAAM8C,EAAKD,IAAOxC,KAAK,QAAQ2B,SAAS,UAAUF,KAAK,cACxE,kBAAC,EAAD,CAAQ9B,QAAS+C,EAAQ1C,KAAK,QAAQ2B,SAAS,UAAUF,KAAK,cAC9D,kBAAC,EAAD,CAAQzB,KAAK,YAAY2B,SAAS,SAASF,KAAK,aAC5CG,UAAW,kBAAkB,OAAZY,EAAKjB,IACtB5B,QAAS,kBAAMgD,EAAOH,UCzB3Bc,EAFa7D,IAAMC,cAAc,gBCIjC,G,MAAA,YAA4B,IAAjB+B,EAAgB,EAAhBA,KAAM8B,EAAU,EAAVA,OAC5B,OACI,kBAACC,EAAqBC,SAAtB,MACE,YAAa,IAAVC,EAAS,EAATA,GACD,OACI,kBAAC,EAAD,CAAQ7B,OAAK,EAAChC,UAAU,YAAY4B,KAAMA,EAAM9B,QAAS,kBAAM+D,EAAGH,WCXlF,SAASI,EAAkBC,EAAIC,GAU3B,cATYD,IAAOE,OACfF,EAAKG,EAAoBH,GACzBA,EAAK,IAAIE,KAAKF,WAENC,IAAOC,OACfD,EAAKE,EAAoBF,GACzBA,EAAK,IAAIC,KAAKD,IAEED,EAAKC,EAI7B,SAASG,EAAmBC,GACxB,OAAON,EAAkB,IAAIG,KAAQG,GAYzC,SAASF,EAAoBG,GAIzB,OAFAA,GADAA,GAAQ,KACIC,QAAQ,GACpBD,GAAQ,IAIZ,SAASE,EAAqBF,GAK1B,OAJAA,IAAS,GACC,IACNA,EAAO,GAEJG,EAAoBH,GAO/B,SAASG,EAAoBC,GACzB,IAAIC,EAAS,GACPC,EAAK/D,KAAKC,MAAM4D,EAAO,IAAO,GAAK,GAAK,IAC1CG,GAAY,EACN,IAAPD,IACCF,GAAa,IAALE,EAAY,GAAK,GAAK,GAC9BD,GAAM,UAAOC,EAAP,KACNC,GAAY,GAEhB,IAAMC,EAAKjE,KAAKC,MAAM4D,EAAO,IAAO,GAAK,IACrCK,GAAY,GACL,IAAPD,GAAaD,KACbH,GAAa,IAALI,EAAY,GAAK,GACzBH,GAAM,UAAOG,EAAP,KACNC,GAAY,GAEhB,IAAMC,EAAKnE,KAAKC,MAAM4D,EAAO,IAAO,KACzB,IAAPM,GAAaD,KACbL,GAAa,IAALM,EAAY,GACpBL,GAAM,UAAOK,EAAP,MAEV,IAAMC,EAAKpE,KAAKC,MAAM4D,EAAO,KAG7B,OAFAA,GAAa,IAALO,EACRN,GAAM,UAAOM,EAAP,KAIV,SAASC,IACL,OAAOf,GAAoB,IAAID,MAAOiB,WCpE3B,kBAAoB,IAATb,EAAQ,EAARA,KAEhBc,EAAUZ,EADJT,EAAkB,IAAIG,KAAK,GAAI,IAAIA,KAAKI,KAEpD,OACI,kBAAC,EAAD,CAAO/B,MAAO,SAAW6C,EAAS1C,YAAY,EAAOd,UAAU,KCHxD,G,MAAA,YAAoB,IAAT0C,EAAQ,EAARA,KACtB,OACI,yBAAKrE,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAa4B,KAAK,MAAM8B,OAAQ,QAChC,kBAAC,EAAD,CAAa9B,KAAK,MAAM8B,OAAQ,OAChC,kBAAC,EAAD,CAAa9B,KAAK,MAAM8B,OAAQ,MAChC,kBAAC,EAAD,CAAa9B,KAAK,MAAM8B,OAAQ,OAEpC,yBAAK1D,UAAU,4BACX,kBAAC,EAAD,CAAa4B,KAAK,MAAM8B,QAAS,QACjC,kBAAC,EAAD,CAAa9B,KAAK,MAAM8B,QAAS,OACjC,kBAAC,EAAD,CAAa9B,KAAK,MAAM8B,QAAS,MACjC,kBAAC,EAAD,CAAa9B,KAAK,MAAM8B,QAAS,OAErC,kBAAC0B,EAAD,CAAaf,KAAMA,OCrBhB,GACXgB,SAAU,CACN3D,GAAI,YACJvB,KAAM,aACN0B,MAAO,aACPyD,QAAS,kBAAM,GACf3D,SAAU,kBAAM,GAChBkC,GAAI,SAAClB,EAAD,UAAoB4C,EAApB,EAASA,MAAgB5C,KAEjC6C,WAAY,CACR9D,GAAI,cACJvB,KAAM,YACN0B,MAAO,aACPyD,QAAS,kBAAM,GACf3D,SAAU,kBAAM,GAChBkC,GAAI,SAAClB,EAAD,UAAsBG,EAAtB,EAASA,QAAoBH,MCb1B,GACX8C,UAAW,CACP/D,GAAI,aACJvB,KAAM,QACN0B,MAAO,WACPyD,QAAS,qBAAGI,MAAmBC,SAC/BhE,SAAU,SAACgB,GAAD,OAAU,GACpBkB,GAAI,SAAClB,EAAD,GAAqB,IAAZC,EAAW,EAAXA,KAAW,EACmBD,EAAK+C,MAAtCE,EADc,EACdA,QAASC,EADK,EACLA,SAAUC,EADL,EACKA,UACrBC,EAAcd,IAClBa,GAAahC,EAAkBiC,EAAaF,GAC5ClD,EAAK+C,MAAQ,CACTE,QAASA,EACTD,SAAS,EACTE,SAAUE,EACVD,UAAWA,GAEflD,EAAKD,KAGbqD,WAAY,CACRtE,GAAI,cACJvB,KAAM,OACN0B,MAAO,UACPyD,QAAS,qBAAGI,MAAkBC,SAC9BhE,SAAU,SAACgB,GAAD,OAAU,GACpBkB,GAAI,SAAClB,EAAD,GAAqB,IAAZC,EAAW,EAAXA,KACTD,EAAK+C,MAAMC,SAAU,EACrBhD,EAAK+C,MAAMG,SAAWZ,IACtBrC,EAAKD,KAGbsD,WAAY,CACRvE,GAAI,cACJvB,KAAM,UACN0B,MAAO,kBACPyD,QAAS,kBAAM,GACf3D,SAAU,kBAAM,GAChBkC,GAAI,SAAClB,EAAD,GAAqB,IAAZC,EAAW,EAAXA,KAAW,EACSD,EAAK+C,MAA1BE,EADY,EACZA,QAASD,EADG,EACHA,QACjBhD,EAAK+C,MAAQ,CACTE,QAASA,EACTD,QAASA,EACTE,SAAUZ,IACVa,UAAWF,GAEfhD,EAAKD,MC9CjB,SAASuD,EAAWzE,EAAUoC,GAC1BpC,EAASoC,KCEE,OACXnC,GAAI,QACJvB,KAAM,QACNF,KAAM,QACNkG,cDeJ,WAA+B1E,GAAW,IAApBiE,EAAmB,EAAnBA,MAClBQ,EAAWzE,GAAU,WACjB,IAAI4C,ELTZ,YAA6D,IAAjCwB,EAAgC,EAAhCA,SAAUF,EAAsB,EAAtBA,QAC9BtB,EADoD,EAAbyB,UAM3C,OAJIH,IACAtB,GAAQF,EAAmB0B,IAE/BxB,IAAS,EKIM+B,CAAiBV,GAE5B,OADArB,EAAOE,EAAqBF,OCjBhCgC,O,kDCFA,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IACDkE,UAAY,EAAKA,UAAUC,KAAf,gBAFF,E,gEAMfpE,KAAKmE,UAAU,K,gCAGT5C,GACN,IAAI8C,EAAMrE,KAAKC,MAAMO,KAAK+C,MAAME,QAAUlC,EACvC8C,EAAM,IACLA,EAAM,GAEVrE,KAAKC,MAAMW,aAAa,QAAS,CAC7B6C,QAASY,EACTX,SAAUZ,IACVU,SAAS,EACTG,UAAWU,M,+BAKf,OACI,kBAAC,EAAiBrE,KAAKC,MACnB,kBAACuB,EAAqB8C,SAAtB,CAA+BnE,MAAO,CAACuB,GAAI1B,KAAKmE,YAC5C,kBAAC,EAAD,CAAcjC,KAAMlC,KAAKC,MAAMO,KAAK+C,MAAME,QAAS/B,GAAI1B,KAAKmE,kB,GA3BpDjE,aDIxBqE,QAAS,CACLA,EAAQrB,SACRsB,EAAalB,UACbkB,EAAaX,WACbW,EAAaV,WACbS,EAAQlB,YAEZoB,aAAc,CACVhB,QAAS,IACTC,SAAU,KACVC,UAAW,IACXH,SAAS,IEpBF,GACXkB,cAAe,CACXnF,GAAI,iBACJvB,KAAM,QACN0B,MAAO,WACPyD,QAAS,qBAAGwB,UAA2BnB,SACvChE,SAAU,SAACgB,GAAD,OAAU,GACpBkB,GAAI,SAAClB,EAAD,GAAqB,IAAZC,EAAW,EAAXA,KAAW,EACeD,EAAKmE,UAAhCC,EADY,EACZA,aAAclB,EADF,EACEA,SACtBlD,EAAKmE,UAAY,CACbnB,SAAS,EACToB,aAAeA,EAAe5C,EAAmB0B,IAErDjD,EAAKD,KAGbqE,eAAgB,CACZtF,GAAI,kBACJvB,KAAM,OACN0B,MAAO,UACPyD,QAAS,qBAAGwB,UAA0BnB,SACtChE,SAAU,SAACgB,GAAD,OAAU,GACpBkB,GAAI,SAAClB,EAAD,GAAqB,IAAZC,EAAW,EAAXA,KACTD,EAAKmE,UAAUnB,SAAU,EACzBhD,EAAKmE,UAAUjB,SAAWZ,IAC1BrC,EAAKD,KAGbsE,eAAgB,CACZvF,GAAI,kBACJvB,KAAM,UACN0B,MAAO,kBACPyD,QAAS,kBAAM,GACf3D,SAAU,kBAAM,GAChBkC,GAAI,SAAClB,EAAD,GAAqB,IAAZC,EAAW,EAAXA,KACTD,EAAKmE,UAAUjB,SAAWZ,IAC1BtC,EAAKmE,UAAUC,aAAe,EAC9BnE,EAAKD,MClCF,GACXmE,UCDW,CACXpF,GAAI,YACJvB,KAAM,iBACNF,KAAM,WACNkG,cLGJ,WAAuC1E,GAAW,IAAxBqF,EAAuB,EAAvBA,UACtBZ,EAAWzE,GAAU,WAAO,IAChBkE,EAAoCmB,EAApCnB,QAASoB,EAA2BD,EAA3BC,aAAclB,EAAaiB,EAAbjB,SAC3BxB,EAAO0C,EAKX,OAJIpB,IACAtB,GAAQF,EAAmB0B,IAE/BxB,ELsBR,SAA4BA,GACxB,OAAOG,EAAoBH,GKvBhB6C,CAAmB7C,OKT9BgC,O,uKCJI,OACI,kBAAC,EAAiBlE,KAAKC,W,GAHHC,aDO5BqE,QAAS,CACLA,EAAQrB,SACR8B,EAAiBH,eACjBG,EAAiBN,cACjBM,EAAiBF,eACjBP,EAAQlB,YAEZoB,aAAc,CACVjB,SAAS,EACToB,aAAc,EACdlB,SAAU,ODddH,MAAOA,GGDI,G,MAAA,YAAwB,IAAbjE,EAAY,EAAZA,SAChB2F,EAAUC,OAAOC,OAAO5E,GAAO6E,KAAI,SAAA/F,GAAI,OAAI,kBAAC,EAAD,CAAYgG,IAAKhG,EAAKE,GAAIF,KAAMA,EAAMC,SAAUA,OACjG,OACI,yBAAKzB,UAAU,oBACX,yBAAKA,UAAU,mBACToH,MCPH,G,MAAA,YAAsB,IAAX9G,EAAU,EAAVA,OACtB,OACI,yBAAKN,UAAU,oBAAoBF,QAASQ,MCFrC,WAAS8B,GAAQ,IAEpBZ,EADSY,EAATO,KACAnB,KACFiG,EAAW/E,EAAMlB,GACvB,OAAO5B,IAAM8H,cAAcD,EAASpB,OAAQjE,ICFjC,G,MAAA,YAA4B,IAAjB9B,EAAgB,EAAhBA,OAAQqC,EAAQ,EAARA,KAC9B,OAAOrC,EAAOgF,QAAQ3C,IAClB,kBAAC,EAAciB,SAAf,MACC,SAAC8C,GACE,OACI,yBAAK1G,UAAU,cAAc6B,MAAOvB,EAAOuB,MAAO/B,QAAS,kBAAMQ,EAAOuD,GAAGlB,EAAM+D,KAC7E,kBAACnF,EAAD,CAAMtB,KAAMK,EAAOH,KAAMD,KAAK,aCNnC,G,MAAA,YAAoB,IAATyC,EAAQ,EAARA,KACtB,OACI,yBAAK3C,UAAU,gBACT0C,EAAMC,EAAKnB,MAAMkF,QAAQa,KAAI,SAAAjH,GAAM,OAAI,kBAAC,EAAD,CAAYkH,IAAKlH,EAAOoB,GAAIpB,OAAQA,EAAQqC,KAAMA,UCLxF,G,MAAA,YAAoB,IAAT1C,EAAQ,EAARA,KACtB,OACI,yBAAKD,UAAU,oBAAoBC,KC0B5B0H,G,wDA1BX,WAAYvF,GAAQ,IAAD,uBACf,cAAMA,IACDwF,MAAQ,CAACvD,KAAM,SAFL,IAIP7C,EADS,EAAKY,MAAdO,KACAnB,KACFiG,EAAW/E,EAAMlB,GALR,OAMfqG,aAAY,WACRJ,EAAStB,cAAc,EAAK/D,MAAMO,MAAM,SAAC6D,GAClC,EAAKoB,MAAMvD,OAASmC,GACnB,EAAKsB,SAAS,CACVzD,KAAMmC,SAInB,KAdY,E,qDAkBf,OACI,yBAAKxG,UAAU,cACTmC,KAAKyF,MAAMvD,U,GArBLhC,cCLH0F,E,sCACjBC,SAAW,WACP,IAAIC,EAAQC,OAAOC,aAAaC,QAAQ,SAMxC,OAFIH,EAHAA,EAGQI,KAAKC,MAAML,GAFX,I,KAMhBM,UAAY,SAACN,GACTA,EAAQI,KAAKG,UAAUP,GACvBC,OAAOC,aAAaM,QAAQ,QAASR,KCH7C,SAASS,EAAmBlH,GACxB,IACMyG,GADU,IAAIF,GACEC,WAClBW,EAAM,EACVV,EAAMW,SAAQ,SAAAjG,GACPA,EAAKnB,OAASA,GACbmH,OAGR,IAAMlB,EAAW/E,EAAMlB,GAEvB,MADiB,UAAMiG,EAASxH,KAAf,aAAwB0I,GAI7C,SAASE,EAAT,GAA4C,IAAnBrH,EAAkB,EAAlBA,KAAMsH,EAAY,EAAZA,SACvBnG,EAAQ,CACRjB,GAAI,KACJzB,KAAMyI,EAAmBlH,GACzBsH,SAAUA,EACVtH,KAAMA,GAGV,OADAmB,EAAKnB,GAAQkB,EAAMlB,GAAMoF,aAClBjE,EAiBX,SAASoG,GAAkBd,GACvB,OAAOA,EAAMV,KAAI,SAAA5E,GAAI,OAfzB,SAA0BA,GAAO,IACrBjB,EAA6BiB,EAA7BjB,GAAIzB,EAAyB0C,EAAzB1C,KAAM6I,EAAmBnG,EAAnBmG,SAAUtH,EAASmB,EAATnB,KAC5B,OACI,yBAAKgG,IAAK9F,EAAI1B,UAAU,cACpBE,KAAM,CAACmB,MAAO,GAAIC,OAAQ,IAC1B0H,YAAW,CAACjI,EAAG+H,EAAS/H,EAAGC,EAAG8H,EAAS9H,EAAGiI,EAAG,EAAGC,EAAG,EAAGC,aAAa,IACnE,kBAAC,EAAD,CAAUlJ,KAAMA,IAChB,kBAAC,EAAD,CAAUuB,KAAMA,EAAMtB,KAAM,OAC5B,kBAAC,EAAD,CAAWyC,KAAMA,IACjB,kBAAC,EAAD,CAAaA,KAAMA,KAMFyG,CAAiBzG,MCjD9C,SAAS0G,GAAiBC,EAAKC,EAAUjH,GAErC,OADAgH,EAAIC,GAAYjH,EACTgH,E,UC2FIE,G,kDAnFX,WAAYpH,GAAQ,IAAD,8BACf,cAAMA,IACDwF,MAAQ,CACT6B,KAAM,EACNC,MAAM,GAGV,EAAKC,QAAU,EAAKA,QAAQpD,KAAb,gBACf,EAAKqD,SAAW,EAAKA,SAASrD,KAAd,gBAChB,EAAKsD,YAAc,EAAKA,YAAYtD,KAAjB,gBACnB,EAAKuD,iBAAmB,EAAKA,iBAAiBvD,KAAtB,gBAVT,E,oDAaX/E,GACJW,KAAK2F,SAAS,CACV2B,KAAM,EACNM,WAAYvI,EACZmB,KAAMkG,EAAc,CAChBrH,KAAMA,EACNsH,SAAU3G,KAAKC,MAAM0G,e,uCAKhBS,EAAUjH,GAAQ,IACzBK,EAASR,KAAKyF,MAAdjF,KACNA,EAAO0G,GAAiB1G,EAAM4G,EAAUjH,GACxCH,KAAK2F,SAAS,CAACnF,KAAMA,M,+BAGhBA,IAELC,EADiBT,KAAKC,MAAdQ,MACHD,GACLR,KAAK0H,gB,oCAGM,IAAD,OACV1H,KAAK2F,SAAS,CACV4B,MAAM,IAEVM,YAAW,WACP,EAAKlC,SAAS,CACV2B,KAAM,EACNM,WAAY,KACZL,MAAM,EACN/G,KAAM,OAEV,EAAKP,MAAMS,WACZ,O,+BAGG,IACEoH,EAAW9H,KAAKC,MAAhB6H,OADH,EAEwB9H,KAAKyF,MAA1B6B,EAFH,EAEGA,KAAMC,EAFT,EAESA,KAAM/G,EAFf,EAEeA,KAChBuH,EAAO,KACX,OAAOT,GACH,KAAK,EACDS,EACI,kBAAC,EAAD,CAAgBzI,SAAUU,KAAKwH,UAEnC,MACJ,KAAK,EACDO,EACI,kBAACC,EAAD,CAAkBxH,KAAMA,EACpBC,KAAMT,KAAKyH,SAAU/G,OAAQV,KAAK0H,YAClC9G,aAAcZ,KAAK2H,mBAG3B,MACJ,QACII,EACI,qCAGZ,OACI,yBAAKlK,UAAW,mBAAqB0J,EAAO,YAAc,KACpDO,GAAUC,EACVD,GAAU,kBAAC,EAAD,CAAkB3J,OAAQ6B,KAAK0H,mB,GA9E/BxH,aC6Cb+H,I,wDA/CX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IACDwF,MAAQ,GAEb,EAAK8B,KAAO,EAAKA,KAAKnD,KAAV,gBACZ,EAAK3D,KAAO,EAAKA,KAAK2D,KAAV,gBACZ,EAAKzD,OAAS,EAAKA,OAAOyD,KAAZ,gBACd,EAAK1D,OAAS,EAAKA,OAAO0D,KAAZ,gBAPC,E,iDAUd1C,GAAK,IAAD,OACL1B,KAAK2F,SAAS,CAAC4B,MAAM,IACrBM,YAAW,WACP,EAAKlC,SAAS,CAAC4B,KAAM,OACrB7F,MACD,O,6BAGC,IAAD,EACoB1B,KAAKC,MAApBQ,EADL,EACKA,KAAMD,EADX,EACWA,KACdR,KAAKuH,MAAK,kBAAM9G,EAAKD,Q,+BAGf,IAAD,EACoBR,KAAKC,MAAtBU,EADH,EACGA,OAAQH,EADX,EACWA,KAChBR,KAAKuH,MAAK,kBAAM5G,EAAOH,Q,+BAIvBR,KAAKuH,KAAKvH,KAAKC,MAAM9B,U,+BAGf,IAAD,EAC0B6B,KAAKC,MAA5BO,EADH,EACGA,KAAMI,EADT,EACSA,aACd,OACI,yBAAK/C,UAAW,qBAAuBmC,KAAKyF,MAAM8B,KAAO,YAAc,KACnE,kBAACS,EAAD,CAAkBxH,KAAMA,EACpBC,KAAMT,KAAKS,KAAME,OAAQX,KAAKW,OAC9BD,OAAQV,KAAKU,OACbE,aAAcA,IAElB,kBAAC,EAAD,CAAkBzC,OAAQ6B,KAAKU,c,GA1CjBR,c,oBC4DfgI,I,0EAxDX,WAAYjI,GAAQ,IAAD,8BACf,cAAMA,IACDwF,MAAQ,CACT0C,mBAAeC,GAGnB,EAAKC,SAAW,EAAKA,SAASjE,KAAd,gBAChB,EAAKkE,SAAW,EAAKA,SAASlE,KAAd,gBAPD,E,qDAUVuC,GAKL,OAJkB3G,KAAKC,MAAf6F,MACayC,QAAO,SAAA/H,GACxB,OAASA,EAAKmG,SAAS/H,IAAM+H,EAAS6B,IAAQhI,EAAKmG,SAAS9H,IAAM8H,EAAS8B,MAEjE,K,+BAGTC,GAAc,IACXP,EAAkBnI,KAAKyF,MAAvB0C,cACAQ,EAAe3I,KAAKC,MAApB0I,WACAH,EAAWL,EAAXK,GAAIC,EAAON,EAAPM,GACJG,EAAWF,EAAXE,GAAIC,EAAOH,EAAPG,GACZ,GAAIL,IAAOI,GAAQH,IAAOI,EAAK,CAC3B,IAAMrI,EAAOR,KAAKqI,SAAS,CAACG,KAAIC,OAC7BjI,IACCA,EAAKmG,SAAW,CACZ/H,EAAGgK,EACH/J,EAAGgK,GAEPF,EAAWnI,IAGnBR,KAAK2F,SAAS,CACVwC,mBAAeC,M,+BAIb,IAAD,SACsBpI,KAAKC,MAAxB3B,EADH,EACGA,QACFwK,EAAclC,GAFf,EACYd,OAEjB,OACI,yBAAKjI,UAAU,YAAYoB,MAAO,CAACC,MAAiB,GAAVZ,IACtC,kBAAC,KAAD,CAAYD,KAAMC,EAASY,MAAiB,GAAVZ,EAC9ByK,UAAW,GAAIC,OAAQ,CAAC,EAAG,GAC3BC,iBAAiB,EACjBC,YAAa,KACbC,WAAY,SAACC,EAAUC,EAAX,OAAsBzK,EAAtB,EAAsBA,EAAGC,EAAzB,EAAyBA,EAAzB,OAAgC,EAAKyJ,SAAS,CAACM,GAAIhK,EAAGiK,GAAIhK,KACtEyK,YAAa,SAACF,EAAD,GAAuB,IAAXxK,EAAU,EAAVA,EAAGC,EAAO,EAAPA,EAAS,EAAK8G,SAAS,CAACwC,cAAe,CAAEK,GAAI5J,EAAG6J,GAAI5J,OAC1EiK,Q,GAlDH5I,cCDRqJ,G,yGANP,OAAQ,CAAC,MAAM,KAAK,KAAK,KAAK,MAAMC,QAAQ,UAAU,SAAAC,GAAC,OAClDA,EAAIC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAMH,EAAI,GAAGI,SAAS,W,KCCvE,I,MAAA,YAAsB,IAAXC,EAAU,EAAVA,OACtB,OACI,yBAAKjM,UAAU,eACTiM,KCsKCC,G,kDAhKX,WAAY9J,GAAQ,IAAD,8BACf,cAAMA,IACD+J,YAAc,IAAIpE,EACvB,EAAKH,MAAQ,CACTvG,MAAO+K,SAASC,gBAAgBC,YAChChL,OAAQ8K,SAASC,gBAAgBE,aACjCC,WAAW,EACXvE,MAAO,EAAKkE,YAAYnE,YAG5B,EAAKyE,QAAU,EAAKA,QAAQlG,KAAb,gBACf,EAAKqD,SAAW,EAAKA,SAASrD,KAAd,gBAChB,EAAKlB,SAAW,EAAKA,SAASkB,KAAd,gBAChB,EAAKmG,WAAa,EAAKA,WAAWnG,KAAhB,gBAClB,EAAKf,WAAa,EAAKA,WAAWe,KAAhB,gBAClB,EAAKoG,WAAa,EAAKA,WAAWpG,KAAhB,gBAClB,EAAKqG,YAAc,EAAKA,YAAYrG,KAAjB,gBACnB,EAAKsG,cAAgB,EAAKA,cAActG,KAAnB,gBACrB,EAAKuD,iBAAmB,EAAKA,iBAAiBvD,KAAtB,gBACxB,EAAKuG,oBAAsB,EAAKA,oBAAoBvG,KAAzB,gBAC3B2B,OAAO6E,iBAAiB,SAAU,EAAKJ,YApBxB,E,yDAwBfxK,KAAK2F,SAAS,CACVzG,MAAO+K,SAASC,gBAAgBC,YAChChL,OAAQ8K,SAASC,gBAAgBE,iB,4CAKrC,IAAM9L,EAAUG,KAAKC,MAAMsB,KAAKyF,MAAMvG,MAAQ,IAAM,EAC9CX,EAAOE,KAAKC,MAAMsB,KAAKyF,MAAMtG,OAAS,IAAM,EAGlD,MAAO,CACHb,QAASA,EACTC,KAAMA,EACNsM,YALyB,GAAVvM,EAAgB0B,KAAKyF,MAAMvG,MAKf,EAC3B4L,YALsB,GAAPvM,EAAayB,KAAKyF,MAAMtG,U,iCAS5B,IAATP,EAAQ,EAARA,EAAGC,EAAK,EAALA,EACTmB,KAAK2F,SAAS,CACVvC,MAAM,EACN2H,YAAa,CACTnM,EAAGA,EACHC,EAAGA,O,kCAKH6C,GAAK,IACPoE,EAAU9F,KAAKyF,MAAfK,MACNA,EAAQpE,EAAGoE,GACX9F,KAAK2F,SAAS,CACVG,MAAOA,IAEX9F,KAAKgK,YAAY5D,UAAUN,K,+BAGtBtF,GACLR,KAAK2F,SAAS,CAACzC,SAAUgC,OAAO8F,OAAO,GAAIxK,O,mCAI3CR,KAAK2F,SAAS,CAACzC,SAAU,S,uCAGZkE,EAAUjH,GAAQ,IACzB+C,EAAalD,KAAKyF,MAAlBvC,SACNA,EAAWgE,GAAiBhE,EAAUkE,EAAUjH,GAChDH,KAAK2F,SAAS,CAACzC,SAAUA,M,+BAQpB+H,GAAY,IAAD,OAChBjL,KAAKyK,aAAY,SAAA3E,GAcb,OAboB,OAAjBmF,EAAU1L,IACT0L,EAAU1L,GAAKgK,GAAK2B,YACpBpF,EAAMqF,KAAKF,IAEXnF,EAAQA,EAAMV,KAAI,SAAA5E,GACd,OAAGA,EAAKjB,KAAO0L,EAAU1L,GACd0L,EAEAzK,KAInB,EAAKmF,SAAS,CAACzC,SAAU,OAClB4C,O,iCAIJsF,GAAc,IAAD,OACpBpL,KAAKyK,aAAY,SAAA3E,GAKb,OAJsB,OAAnBsF,EAAY7L,KACXuG,EAAQA,EAAMyC,QAAO,SAAA/H,GAAI,OAAIA,EAAKjB,KAAO6L,EAAY7L,OAEzD,EAAKoG,SAAS,CAACzC,SAAU,OAClB4C,O,sCAKX9F,KAAK2F,SAAS,CACVvC,MAAM,M,+BAOV,IAFA,IAAMhF,EAAa4B,KAAK2K,sBACpBb,EAAS,GACLuB,EAAI,EAAGA,EAAKjN,EAAWE,QAAUF,EAAWG,KAAO8M,IACvDvB,EAAOuB,GACH,kBAAC,EAAD,CAAOhG,IAAKgG,EAAGtN,KAAM,GACjBG,gBAAiBE,EACjBD,OAAQ6B,KAAKsK,QAASrM,MAAOoN,IAIzC,OACI,yBAAKxN,UAAU,QAAQoB,MAAO,CAC1BqM,aAAclN,EAAWyM,YACzBU,cAAenN,EAAW0M,cAE1B,kBAAC,EAAcxG,SAAf,CAAwBnE,MAAO,CAC3BM,KAAMT,KAAKyH,SACX9G,OAAQX,KAAKqD,WACbD,KAAMpD,KAAKkD,WAEX,kBAAC,GAAD,CAAe4E,OAAQ9H,KAAKyF,MAAMrC,KAC9BuD,SAAU3G,KAAKyF,MAAMsF,YACrBrK,OAAQV,KAAK0K,cACbjK,KAAMT,KAAKyH,WAEf,kBAAC,GAAD,CAAU3B,MAAO9F,KAAKyF,MAAMK,MACxBxH,QAASF,EAAWE,QAAU,EAC9BqK,WAAY3I,KAAKyH,WAErB,kBAAC,GAAD,CAAYqC,OAAQA,IAClB9J,KAAKyF,MAAMvC,UACT,kBAAC,GAAD,CAAiB1C,KAAMR,KAAKyF,MAAMvC,SAC9BzC,KAAMT,KAAKyH,SAAU9G,OAAQX,KAAKqD,WAClCzC,aAAcZ,KAAK2H,iBACnBxJ,OAAQ6B,KAAKuK,mB,GAxJrBrK,aCNL,I,MAAA,YAAuC,IAA5BsL,EAA2B,EAA3BA,MAAO1D,EAAoB,EAApBA,OAAQ2D,EAAY,EAAZA,SAC7BC,EAAWF,EAAXE,OACR,OACI,0BAAM7N,UAAW,wBACbiK,EAAS,GAAK,YACf7I,MAAO,CACN0M,MAAOD,EAAOC,MACdC,WAAYF,EAAOE,aAEnB,kBAACxM,EAAD,CAAMtB,KAAM4N,EAAO1N,KAAML,QAAS,kBAAM8N,EAASD,IAAQzN,KAAK,UCX3D8N,GAFMpO,IAAMC,cAAc,SCF1B,IACXoO,MAAO,CACHvM,GAAI,QACJ1B,UAAW,cACX6N,OAAQ,CACJ1N,KAAM,MACN2N,MAAO,sBACPC,WAAY,SAGpB7M,KAAM,CACFQ,GAAI,OACJ1B,UAAW,aACX6N,OAAQ,CACJ1N,KAAM,OACN2N,MAAO,OACPC,WAAY,yBCiBTG,I,6KAvBP,OACI,kBAAC,GAAatK,SAAd,MACC,YAA6B,IAA1BgK,EAAyB,EAAzBA,SAAUO,EAAe,EAAfA,SACV,OACI,yBAAKnO,UAAU,kBAEXqH,OAAOC,OAAO8G,IAAQ7G,KAAI,SAAAoG,GACtB,OACI,kBAAC,GAAD,CAAoBA,MAAOA,EACvBC,SAAUA,EACV3D,OAAQkE,EAASR,gB,GAZzBtL,cCNPgM,I,MCIChM,Y,sCDHlBiM,SAAW,WACP,IAAIC,EAAcrG,OAAOC,aAAaC,QAAQ,SAC9C,GAAGmG,EAAa,CACZ,IAAMC,EAAUnG,KAAKC,MAAMiG,GACrBE,EAAiBpH,OAAOC,OAAO8G,IAAQ1D,QAAO,SAAAiD,GAAK,OAAIA,EAAMjM,KAAO8M,KAEtED,EADyB,IAA1BE,EAAeC,OACAD,EAAe,QAEflE,EAMtB,OAHIgE,IACAA,EAAcH,GAAOH,OAElBM,G,KAEXX,SAAW,SAACD,GACRA,EAAQtF,KAAKG,UAAUmF,EAAMjM,IAC7BwG,OAAOC,aAAaM,QAAQ,QAASkF,MEqB9BgB,I,8DA/BX,WAAYvM,GAAQ,IAAD,8BACf,cAAMA,IACDwF,MAAQ,GACb,EAAKgH,aAAe,IAAIP,GAHT,E,gEAOflM,KAAK2F,SAAS,CACV6F,MAAOxL,KAAKyM,aAAaN,e,+BAIvB,IAAD,OACL,OACI,yBAAKtO,UAAW,OAASmC,KAAKyF,MAAM+F,MAAX,WAAuBxL,KAAKyF,MAAM+F,MAAM3N,WAAa,KAC1E,kBAAC,GAAayG,SAAd,CAAuBnE,MAAO,CAC1BsL,SAAU,SAACD,GACP,EAAK7F,SAAS,CAAC6F,MAAOA,IACtB,EAAKiB,aAAahB,SAASD,IAE/BQ,SAAU,SAACR,GACP,QAAQ,EAAK/F,MAAM+F,OAAQ,EAAK/F,MAAM+F,MAAMjM,KAAOiM,EAAMjM,MAI7D,kBAAC,GAAD,Y,GA1BFW,c,YCDlBwM,IACAC,IAAQC,KAAK,CACTC,OAAQ,CACJC,SAAU,CAAC,oBAAqB,iBAGxC7C,SAASvK,MAAQ,2BACjBqN,IAASjN,OAAO,kBAAC,GAAD,MAAQmK,SAAS+C,cAAc,a","file":"static/js/main.f96fcca9.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faPlus, faBell, faClock, faTasks, faHourglassHalf, faCheck, faPlay,\r\n    faTimes, faPause, faPencilAlt, faHistory, faTrashAlt, faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default {\r\n    load: () => {\r\n        library.add(faPlus, faBell, faClock, faTasks, faHourglassHalf, faCheck, faPlay,\r\n            faTimes, faPause, faPencilAlt, faHistory, faTrashAlt, faSun, faMoon);\r\n    }\r\n};\r\n","import React from 'react'\r\n\r\nconst ActionContext = React.createContext('action');\r\n\r\nexport default ActionContext;\r\n","import React from 'react'\r\n\r\nimport './AddTaskAction.css'\r\n\r\nexport default function({ onClick, children }) {\r\n    return (\r\n        <div className='add-task-action' onClick={onClick}>\r\n            <div className='icon-positioner'>\r\n            {\r\n                children\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function({ name, size, onClick }) {\r\n    return (\r\n        <span onClick={onClick}>\r\n            <FontAwesomeIcon icon={name} className={size ? ('fa-' + size) : ''} />\r\n        </span>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport AddTaskAction from './AddTaskAction'\r\nimport Icon from './Icon'\r\nimport './Field.css'\r\n\r\nfunction calculateProperties(index, dimensions) {\r\n    let dark;\r\n    const cols = dimensions.columns;\r\n    const rows = dimensions.rows;\r\n    const row = Math.floor(index / cols);\r\n    const column = index % cols;\r\n    if(cols % 2 === 0) {\r\n        if(row % 2 === 0) {\r\n            dark = (index % 2 === 0);\r\n        } else {\r\n            dark = (index % 2 === 1);\r\n        }\r\n    } else {\r\n        dark = (index % 2 === 0);\r\n    }\r\n    return {\r\n        x: column,\r\n        y: row,\r\n        accessible: ((row < rows-1) && (column < cols-1)),\r\n        dark: dark\r\n    };\r\n}\r\n\r\nexport default function({ index, boardDimensions, size, action }) {\r\n    const {x, y, accessible, dark} = calculateProperties(index, boardDimensions);\r\n    return (\r\n        <div className={'field ' + (dark ? 'dark' : 'light') + (accessible ? ' accessible' : '')} style={{width: size, height: size}}>\r\n        { accessible && (\r\n            <AddTaskAction onClick={() => action({x: x, y: y})}>\r\n                <Icon name='plus' size='3x' />\r\n            </AddTaskAction>\r\n        )}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport Icon from './Icon'\r\nimport './TaskChoice.css'\r\n\r\nexport default function({ type, callback }) {\r\n    return (\r\n        <div className='choice-wrapper' onClick={() => callback(type.id)}>\r\n            <div className='icon-wrapper'>\r\n                <Icon name={type.icon} size='3x' />\r\n            </div>\r\n            <div className='type-wrapper'>{ type.name }</div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport Icon from './Icon'\r\nimport './Button.css'\r\n\r\nexport default function({ id, className, onClick, disabled, text, icon, title, severity, condition, small, style }) {\r\n    let render = true;\r\n    if(typeof condition === 'boolean') {\r\n        render = condition\r\n    } else if (typeof condition === 'function') {\r\n        render = condition();\r\n    }\r\n    return render && (\r\n        <button id={id} className={'btn ' + (\r\n                severity ? ('btn-' + severity) : 'btn-info'\r\n            ) + (\r\n                small ? ' btn-small' : ''\r\n            ) + (\r\n                className ? (' ' + className) : ''\r\n            )} onClick={onClick} disabled={disabled}\r\n            title={title} style={style}>\r\n            {icon && (\r\n                <span className='btn-icon'>\r\n                    <Icon name={icon} />\r\n                </span>\r\n            )}\r\n            <span className='btn-text'>{ text }</span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport './Dialogue.css'\r\n\r\nclass Dialoue extends Component {\r\n\r\n    static Header({ children, className }) {\r\n        return (\r\n            <div className={'dialogue-header' + (className ? (' ' + className ): '')}>\r\n                { children }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    static Main({ children, className }) {\r\n        return (\r\n            <div className={'dialogue-main' + (className ? (' ' + className ): '')}>\r\n                { children }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    static Footer({ children, className }) {\r\n        return (\r\n            <div className={'dialogue-footer' + (className ? (' ' + className ): '')}>\r\n                { children }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { children, style } = this.props;\r\n        return (\r\n            <div className='dialogue'>\r\n                <div className='dialogue-body' style={style}>\r\n                    { children }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialoue;\r\n","import React from 'react'\r\n\r\nimport './Input.css'\r\n\r\nexport default function({ id, value, placeholder, onChange, disabled, responsive }) {\r\n    if(responsive !== false) {\r\n        responsive = true;\r\n    }\r\n    return (\r\n        <input id={id} type='text' className={'input' + (responsive ? ' responsive' : '')} disabled={disabled} value={value} onChange={onChange} placeholder={placeholder} />\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport Icon from './Icon'\r\nimport types from '../assets/types'\r\nimport './TaskIcon.css'\r\n\r\nexport default function({ type, size }) {\r\n    return (\r\n        <div className='task-icon-wrapper'>\r\n            <span className='task-icon'>\r\n                <Icon name={types[type].icon} size={size} />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport Button from './Button'\r\nimport Dialogue from './Dialogue'\r\nimport Input from './Input'\r\nimport TaskIcon from './TaskIcon'\r\nimport types from '../assets/types'\r\nimport './TaskDialogue.css'\r\n\r\nexport default function({ task, save, cancel, remove, buttons, editProperty, children }) {\r\n    const { type } = task;\r\n    const editType = types[type];\r\n    return (\r\n        <Dialogue style={{maxWidth: 480}}>\r\n            <Dialogue.Header>\r\n                <h2 className='task-dialogue-header'>\r\n                    { editType.name } <TaskIcon type={type} size={'xs'} />\r\n                </h2>\r\n            </Dialogue.Header>\r\n            <Dialogue.Main>\r\n                <label htmlFor='task-name'>Name</label>\r\n                <Input id='task-name' value={task.name} onChange={e => editProperty('name', e.target.value)} />\r\n                { children }\r\n            </Dialogue.Main>\r\n            <Dialogue.Footer className='text-right'>\r\n                <Button onClick={() => save(task)} icon='check' severity='success' text='Speichern' />\r\n                <Button onClick={cancel} icon='times' severity='warning' text='Abbrechen' />\r\n                <Button icon='trash-alt' severity='danger' text='Löschen'\r\n                    condition={() => task.id !== null}\r\n                    onClick={() => remove(task)}>\r\n                </Button>\r\n            </Dialogue.Footer>\r\n        </Dialogue>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nconst TimerFuntionContext = React.createContext('timerFuntion');\r\n\r\nexport default TimerFuntionContext;\r\n","import React from 'react'\r\n\r\nimport Button from './Button'\r\nimport TimerFunctionContext from '../context/TimerFunctionContext'\r\nimport './TimerButton.css'\r\n\r\nexport default function({ text, amount }) {\r\n    return (\r\n        <TimerFunctionContext.Consumer>\r\n        { ({ fn }) => {\r\n            return (\r\n                <Button small className='timer-btn' text={text} onClick={() => fn(amount)} />\r\n            );\r\n        }}\r\n        </TimerFunctionContext.Consumer>\r\n    );\r\n};\r\n","function getTimeDifference(d1, d2) {\r\n    if(!(typeof d1 === Date)) {\r\n        d1 = flattenMilliseconds(d1);\r\n        d1 = new Date(d1);\r\n    }\r\n    if(!(typeof d2 === Date)) {\r\n        d2 = flattenMilliseconds(d2);\r\n        d2 = new Date(d2);\r\n    }\r\n    const difference = (d1 - d2);\r\n    return difference;\r\n}\r\n\r\nfunction getDifferenceToNow(date) {\r\n    return getTimeDifference(new Date(), date);\r\n}\r\n\r\nfunction getRemainingTime({ lastStop, stopped, remaining }) {\r\n    let time = remaining;\r\n    if(!stopped) {\r\n        time -= getDifferenceToNow(lastStop);\r\n    }\r\n    time *= -1;\r\n    return time;\r\n}\r\n\r\nfunction flattenMilliseconds(time) {\r\n    time /= 1000;\r\n    time = time.toFixed(0);\r\n    time *= 1000;\r\n    return time;\r\n}\r\n\r\nfunction displayRemainingTime(time) {\r\n    time *= -1;\r\n    if(time < 0) {\r\n        time = 0;\r\n    }\r\n    return displayTimeVariable(time);\r\n}\r\n\r\nfunction displayRunningTime(time) {\r\n    return displayTimeVariable(time);\r\n}\r\n\r\nfunction displayTimeVariable(msec) {\r\n    let result = '';\r\n    const dd = Math.floor(msec / 1000 / 60 / 60 / 24);\r\n    let ddPresent = false;\r\n    if(dd !== 0) {\r\n        msec -= dd * 1000 * 60 * 60 * 24;\r\n        result += `${dd}d`;\r\n        ddPresent = true;\r\n    }\r\n    const hh = Math.floor(msec / 1000 / 60 / 60);\r\n    let hhPresent = false;\r\n    if((hh !== 0) || ddPresent) {\r\n        msec -= hh * 1000 * 60 * 60;\r\n        result += `${hh}h`;\r\n        hhPresent = true;\r\n    }\r\n    const mm = Math.floor(msec / 1000 / 60);\r\n    if((mm !== 0) || hhPresent) {\r\n        msec -= mm * 1000 * 60;\r\n        result += `${mm}m`;\r\n    }\r\n    const ss = Math.floor(msec / 1000);\r\n    msec -= ss * 1000;\r\n    result += `${ss}s`;\r\n    return result;\r\n}\r\n\r\nfunction now() {\r\n    return flattenMilliseconds(new Date().getTime());\r\n}\r\n\r\nexport {\r\n    getTimeDifference,\r\n    getDifferenceToNow,\r\n    getRemainingTime,\r\n    flattenMilliseconds,\r\n    displayRemainingTime,\r\n    displayRunningTime,\r\n    now\r\n};\r\n","import React from 'react'\r\n\r\nimport Input from './Input'\r\nimport { getTimeDifference, displayRemainingTime } from '../util/timeUtils'\r\n\r\nexport default function({ time }) {\r\n    const dif = getTimeDifference(new Date(0), new Date(time));\r\n    const display = displayRemainingTime(dif);\r\n    return (\r\n        <Input value={'Zeit: ' + display} responsive={false} disabled={true} />\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport TimerButton from './TimerButton'\r\nimport TimerOutput from './TimerOutput'\r\nimport './TimerControl.css'\r\n\r\nexport default function({ time }) {\r\n    return (\r\n        <div className='timer-control'>\r\n            <div className='buttons add-buttons'>\r\n                <TimerButton text='+1d' amount={86400000} />\r\n                <TimerButton text='+1h' amount={3600000} />\r\n                <TimerButton text='+1m' amount={60000} />\r\n                <TimerButton text='+1s' amount={1000} />\r\n            </div>\r\n            <div className='buttons subtract-buttons'>\r\n                <TimerButton text='-1d' amount={-86400000} />\r\n                <TimerButton text='-1h' amount={-3600000} />\r\n                <TimerButton text='-1m' amount={-60000} />\r\n                <TimerButton text='-1s' amount={-1000} />\r\n            </div>\r\n            <TimerOutput time={time} />\r\n        </div>\r\n    );\r\n};\r\n","export default {\r\n    editTask: {\r\n        id: 'edit-task',\r\n        icon: 'pencil-alt',\r\n        title: 'Bearbeiten',\r\n        visible: () => true,\r\n        disabled: () => false,\r\n        fn: (task, { edit }) => edit(task)\r\n    },\r\n    deleteTask: {\r\n        id: 'delete-task',\r\n        icon: 'trash-alt',\r\n        title: 'Löschen',\r\n        visible: () => true,\r\n        disabled: () => false,\r\n        fn: (task, { remove }) => remove(task)\r\n    }\r\n};\r\n","import { getTimeDifference, now } from '../util/timeUtils'\r\n\r\nexport default {\r\n    stopTimer: {\r\n        id: 'stop-timer',\r\n        icon: 'pause',\r\n        title: 'Anhalten',\r\n        visible: ({ timer }) => !timer.stopped,\r\n        disabled: (task) => false,\r\n        fn: (task, { save }) => {\r\n            let { runtime, lastStop, remaining } = task.timer;\r\n            let currentTime = now();\r\n            remaining -= getTimeDifference(currentTime, lastStop);\r\n            task.timer = {\r\n                runtime: runtime,\r\n                stopped: true,\r\n                lastStop: currentTime,\r\n                remaining: remaining\r\n            };\r\n            save(task);\r\n        }\r\n    },\r\n    startTimer: {\r\n        id: 'start-timer',\r\n        icon: 'play',\r\n        title: 'Starten',\r\n        visible: ({ timer }) => timer.stopped,\r\n        disabled: (task) => true,\r\n        fn: (task, { save }) => {\r\n            task.timer.stopped = false;\r\n            task.timer.lastStop = now();\r\n            save(task);\r\n        }\r\n    },\r\n    resetTimer: {\r\n        id: 'reset-timer',\r\n        icon: 'history',\r\n        title: 'Zurücksetzen',\r\n        visible: () => true,\r\n        disabled: () => false,\r\n        fn: (task, { save }) => {\r\n            const { runtime, stopped } = task.timer;\r\n            task.timer = {\r\n                runtime: runtime,\r\n                stopped: stopped,\r\n                lastStop: now(),\r\n                remaining: runtime\r\n            }\r\n            save(task);\r\n        }\r\n    }\r\n};\r\n","import { getDifferenceToNow, getRemainingTime, displayRemainingTime, displayRunningTime } from './timeUtils'\r\n\r\nfunction doCallback(callback, fn) {\r\n    callback(fn());\r\n}\r\n\r\nfunction alarmTimer({ alarm }, callback) {\r\n    doCallback(callback, () => {\r\n        return '-';\r\n    });\r\n}\r\n\r\nfunction stopwatchTimer({ stopwatch }, callback) {\r\n    doCallback(callback, () => {\r\n        const { stopped, measuredTime, lastStop } = stopwatch;\r\n        let time = measuredTime;\r\n        if(!stopped) {\r\n            time += getDifferenceToNow(lastStop);\r\n        }\r\n        time = displayRunningTime(time);\r\n        return time;\r\n    });\r\n}\r\n\r\nfunction timerTimer({ timer }, callback) {\r\n    doCallback(callback, () => {\r\n        let time = getRemainingTime(timer);\r\n        time = displayRemainingTime(time);\r\n        return time;\r\n    });\r\n}\r\n\r\nfunction trackerTimer({ tracker }, callback) {\r\n    doCallback(callback, () => {\r\n        return '-';\r\n    });\r\n}\r\n\r\nexport {\r\n    alarmTimer,\r\n    stopwatchTimer,\r\n    timerTimer,\r\n    trackerTimer\r\n};\r\n","import TimerDialogue from '../components/dialogue/TimerDialogue'\r\nimport actions from './types.task.actions'\r\nimport timerActions from './types.timer.actions'\r\nimport { timerTimer } from '../util/typeUtils'\r\n\r\nexport default {\r\n    id: 'timer',\r\n    icon: 'clock',\r\n    name: 'Timer',\r\n    timerFunction: timerTimer,\r\n    editor: TimerDialogue,\r\n    actions: [\r\n        actions.editTask,\r\n        timerActions.stopTimer,\r\n        timerActions.startTimer,\r\n        timerActions.resetTimer,\r\n        actions.deleteTask\r\n    ],\r\n    typeSpecific: {\r\n        runtime: 300000,\r\n        lastStop: null,\r\n        remaining: 300000,\r\n        stopped: true\r\n    }\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport TaskDialogue from '../TaskDialogue'\r\nimport TimerControl from '../TimerControl'\r\nimport TimerFunctionContext from '../../context/TimerFunctionContext'\r\nimport { now } from '../../util/timeUtils'\r\n\r\nclass TimerDialogue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.alterTime = this.alterTime.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.alterTime(0);\r\n    }\r\n\r\n    alterTime(amount) {\r\n        let res = this.props.task.timer.runtime + amount;\r\n        if(res < 0) {\r\n            res = 0;\r\n        }\r\n        this.props.editProperty('timer', {\r\n            runtime: res,\r\n            lastStop: now(),\r\n            stopped: true,\r\n            remaining: res\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TaskDialogue {...this.props}>\r\n                <TimerFunctionContext.Provider value={{fn: this.alterTime }}>\r\n                    <TimerControl time={this.props.task.timer.runtime} fn={this.alterTime} />\r\n                </TimerFunctionContext.Provider>\r\n            </TaskDialogue>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimerDialogue;\r\n","import { getDifferenceToNow, now } from '../util/timeUtils'\r\n\r\nexport default {\r\n    stopStopwatch: {\r\n        id: 'stop-stopwatch',\r\n        icon: 'pause',\r\n        title: 'Anhalten',\r\n        visible: ({ stopwatch }) => !stopwatch.stopped,\r\n        disabled: (task) => false,\r\n        fn: (task, { save }) => {\r\n            const { measuredTime, lastStop } = task.stopwatch;\r\n            task.stopwatch = {\r\n                stopped: true,\r\n                measuredTime: (measuredTime + getDifferenceToNow(lastStop))\r\n            };\r\n            save(task);\r\n        }\r\n    },\r\n    startStopwatch: {\r\n        id: 'start-stopwatch',\r\n        icon: 'play',\r\n        title: 'Starten',\r\n        visible: ({ stopwatch }) => stopwatch.stopped,\r\n        disabled: (task) => true,\r\n        fn: (task, { save }) => {\r\n            task.stopwatch.stopped = false;\r\n            task.stopwatch.lastStop = now();\r\n            save(task);\r\n        }\r\n    },\r\n    resetStopwatch: {\r\n        id: 'reset-stopwatch',\r\n        icon: 'history',\r\n        title: 'Zurücksetzen',\r\n        visible: () => true,\r\n        disabled: () => false,\r\n        fn: (task, { save }) => {\r\n            task.stopwatch.lastStop = now();\r\n            task.stopwatch.measuredTime = 0;\r\n            save(task);\r\n        }\r\n    }\r\n};\r\n","//import alarm from './types.alarm'\r\nimport timer from './types.timer'\r\n//import tracker from './types.tracker'\r\nimport stopwatch from './types.stopwatch'\r\n\r\nexport default {\r\n    stopwatch: stopwatch,\r\n    timer: timer//,\r\n//    alarm: alarm,\r\n//    tracker: tracker\r\n};\r\n","import StopwatchDialogue from '../components/dialogue/StopwatchDialogue'\r\nimport actions from './types.task.actions'\r\nimport stopwatchActions from './types.stopwatch.actions'\r\nimport { stopwatchTimer } from '../util/typeUtils'\r\n\r\nexport default {\r\n    id: 'stopwatch',\r\n    icon: 'hourglass-half',\r\n    name: 'Stoppuhr',\r\n    timerFunction: stopwatchTimer,\r\n    editor: StopwatchDialogue,\r\n    actions: [\r\n        actions.editTask,\r\n        stopwatchActions.startStopwatch,\r\n        stopwatchActions.stopStopwatch,\r\n        stopwatchActions.resetStopwatch,\r\n        actions.deleteTask\r\n    ],\r\n    typeSpecific: {\r\n        stopped: true,\r\n        measuredTime: 0,\r\n        lastStop: null\r\n    }\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport TaskDialogue from '../TaskDialogue'\r\n\r\nclass StopwatchDialogue extends Component {\r\n    render() {\r\n        return (\r\n            <TaskDialogue {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default StopwatchDialogue\r\n","import React from 'react'\r\n\r\nimport TaskChoice from './TaskChoice'\r\nimport types from '../assets/types'\r\nimport './ChooseTaskType.css'\r\n\r\nexport default function({ callback }) {\r\n    const choices = Object.values(types).map(type => <TaskChoice key={type.id} type={type} callback={callback} />)\r\n    return (\r\n        <div className='choose-task-type'>\r\n            <div className='content-wrapper'>\r\n                { choices }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport './ClickableOverlay.css'\r\n\r\nexport default function({ action }) {\r\n    return (\r\n        <div className='clickable-overlay' onClick={action} />\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport types from '../assets/types'\r\n\r\nexport default function(props) {\r\n    const { task } = props;\r\n    const { type } = task;\r\n    const taskType = types[type];\r\n    return React.createElement(taskType.editor, props);\r\n};\r\n","import React from 'react'\r\n\r\nimport ActionContext from '../context/ActionContext'\r\nimport Icon from './Icon'\r\nimport './TaskAction.css'\r\n\r\nexport default function({ action, task }) {\r\n    return action.visible(task) && (\r\n        <ActionContext.Consumer>\r\n        {(actions) => {\r\n            return (\r\n                <div className='task-action' title={action.title} onClick={() => action.fn(task, actions)}>\r\n                    <Icon name={action.icon} size='1x' />\r\n                </div>\r\n            )\r\n        }}\r\n        </ActionContext.Consumer>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport TaskAction from './TaskAction'\r\nimport types from '../assets/types'\r\nimport './TaskActions.css'\r\n\r\nexport default function({ task }) {\r\n    return (\r\n        <div className='task-actions'>\r\n            { types[task.type].actions.map(action => <TaskAction key={action.id} action={action} task={task} />) }\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport './TaskName.css'\r\n\r\nexport default function({ name }) {\r\n    return (\r\n        <div className='task-widget-name'>{name}</div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport types from '../assets/types'\r\nimport './TaskTimer.css'\r\n\r\nclass TaskTimer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {time: '. . .'};\r\n        const { task } = this.props;\r\n        const { type } = task;\r\n        const taskType = types[type];\r\n        setInterval(() => {\r\n            taskType.timerFunction(this.props.task, (res) => {\r\n                if(this.state.time !== res) {\r\n                    this.setState({\r\n                        time: res\r\n                    });\r\n                }\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='task-timer'>\r\n                { this.state.time }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskTimer;\r\n","export default class TaskService {\r\n    getTasks = () => {\r\n        let tasks = window.localStorage.getItem('tasks');\r\n        if(!tasks) {\r\n            tasks = [];\r\n        } else {\r\n            tasks = JSON.parse(tasks);\r\n        }\r\n        return tasks;\r\n    }\r\n    saveTasks = (tasks) => {\r\n        tasks = JSON.stringify(tasks);\r\n        window.localStorage.setItem('tasks', tasks);\r\n    }\r\n};\r\n","import React from 'react'\r\n\r\nimport TaskActions from './TaskActions'\r\nimport TaskIcon from './TaskIcon'\r\nimport TaskName from './TaskName'\r\nimport TaskTimer from './TaskTimer'\r\nimport TaskService from '../service/taskService'\r\nimport types from '../assets/types'\r\n\r\nfunction getDefaultTaskName(type) {\r\n    const service = new TaskService();\r\n    const tasks = service.getTasks();\r\n    let num = 1;\r\n    tasks.forEach(task => {\r\n        if(task.type === type) {\r\n            num++;\r\n        }\r\n    })\r\n    const taskType = types[type];\r\n    const defaultName = `${taskType.name} #${num}`;\r\n    return defaultName;\r\n}\r\n\r\nfunction createNewTask({ type, position }) {\r\n    let task =  {\r\n        id: null,\r\n        name: getDefaultTaskName(type),\r\n        position: position,\r\n        type: type\r\n    };\r\n    task[type] = types[type].typeSpecific;\r\n    return task;\r\n}\r\n\r\nfunction renderTaskWidget(task) {\r\n    const { id, name, position, type } = task;\r\n    return (\r\n        <div key={id} className='task-widget'\r\n            size={{width: 96, height: 96}}\r\n            data-grid={{x: position.x, y: position.y, w: 1, h: 1, isResizable: false}}>\r\n            <TaskName name={name} />\r\n            <TaskIcon type={type} size={'3x'} />\r\n            <TaskTimer task={task} />\r\n            <TaskActions task={task} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderTaskWidgets(tasks) {\r\n    return tasks.map(task => renderTaskWidget(task));\r\n}\r\n\r\nexport {\r\n    renderTaskWidget,\r\n    renderTaskWidgets,\r\n    createNewTask\r\n};\r\n","function setPropertyValue(obj, property, value) {\r\n    obj[property] = value;\r\n    return obj;\r\n}\r\n\r\nexport {\r\n    setPropertyValue\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport ChooseTaskType from './ChooseTaskType'\r\nimport ClickableOverlay from './ClickableOverlay'\r\nimport EditTaskDialogue from './EditTaskDialogue'\r\nimport { createNewTask } from './Task'\r\nimport { setPropertyValue } from '../util/objectUtils'\r\nimport './NewTaskWizard.css'\r\n\r\nclass NewTaskWizard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            step: 1,\r\n            fade: false,\r\n        }\r\n\r\n        this.setType = this.setType.bind(this);\r\n        this.saveTask = this.saveTask.bind(this);\r\n        this.closeWizard = this.closeWizard.bind(this);\r\n        this.editTaskProperty = this.editTaskProperty.bind(this);\r\n    }\r\n\r\n    setType(type) {\r\n        this.setState({\r\n            step: 2,\r\n            chosenType: type,\r\n            task: createNewTask({\r\n                type: type,\r\n                position: this.props.position\r\n            })\r\n        });\r\n    }\r\n\r\n    editTaskProperty(property, value) {\r\n        let { task } = this.state;\r\n        task = setPropertyValue(task, property, value);\r\n        this.setState({task: task});\r\n    }\r\n\r\n    saveTask(task) {\r\n        const { save } = this.props;\r\n        save(task)\r\n        this.closeWizard();\r\n    }\r\n\r\n    closeWizard() {\r\n        this.setState({\r\n            fade: true\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                step: 1,\r\n                chosenType: null,\r\n                fade: false,\r\n                task: null\r\n            });\r\n            this.props.cancel();\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.props;\r\n        const { step, fade, task } = this.state;\r\n        let elem = null;\r\n        switch(step) {\r\n            case 1:\r\n                elem = (\r\n                    <ChooseTaskType callback={this.setType} />\r\n                );\r\n                break;\r\n            case 2:\r\n                elem = (\r\n                    <EditTaskDialogue task={task}\r\n                        save={this.saveTask} cancel={this.closeWizard}\r\n                        editProperty={this.editTaskProperty}>\r\n                    </EditTaskDialogue>\r\n                );\r\n                break;\r\n            default:\r\n                elem = (\r\n                    <></>\r\n                );\r\n        }\r\n        return (\r\n            <div className={'new-task-wizard' + (fade ? ' fade-out' : '')}>\r\n                { active && elem }\r\n                { active && <ClickableOverlay action={this.closeWizard} /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTaskWizard;\r\n","import React, { Component } from 'react'\r\n\r\nimport ClickableOverlay from './ClickableOverlay'\r\nimport EditTaskDialogue from './EditTaskDialogue'\r\nimport './TaskEditorPanel.css'\r\n\r\nclass TaskEditorPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n        this.fade = this.fade.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n    }\r\n\r\n    fade(fn) {\r\n        this.setState({fade: true});\r\n        setTimeout(() => {\r\n            this.setState({fade: null});\r\n            fn();\r\n        }, 500);\r\n    }\r\n\r\n    save() {\r\n        const { save, task } = this.props;\r\n        this.fade(() => save(task));\r\n    }\r\n\r\n    remove() {\r\n        const { remove, task } = this.props;\r\n        this.fade(() => remove(task));\r\n    }\r\n\r\n    cancel() {\r\n        this.fade(this.props.action);\r\n    }\r\n\r\n    render() {\r\n        const { task, editProperty } = this.props;\r\n        return (\r\n            <div className={'task-editor-panel' + (this.state.fade ? ' fade-out' : '')}>\r\n                <EditTaskDialogue task={task}\r\n                    save={this.save} remove={this.remove}\r\n                    cancel={this.cancel}\r\n                    editProperty={editProperty}>\r\n                </EditTaskDialogue>\r\n                <ClickableOverlay action={this.cancel} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskEditorPanel;\r\n","import React, { Component } from 'react'\r\nimport GridLayout from 'react-grid-layout';\r\n\r\nimport { renderTaskWidgets } from './Task'\r\nimport '../../node_modules/react-grid-layout/css/styles.css'\r\nimport '../../node_modules/react-resizable/css/styles.css'\r\nimport './Task.css'\r\nimport './TaskGrid.css';\r\n\r\nclass TaskGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startPosition: undefined\r\n        };\r\n\r\n        this.findTask = this.findTask.bind(this);\r\n        this.moveTask = this.moveTask.bind(this);\r\n    }\r\n\r\n    findTask(position) {\r\n        const { tasks } = this.props;\r\n        const remain = tasks.filter(task => {\r\n            return ((task.position.x === position.x1) && (task.position.y === position.y1));\r\n        });\r\n        return remain[0];\r\n    }\r\n\r\n    moveTask(endPosition) {\r\n        const { startPosition } = this.state;\r\n        const { updateTask } = this.props;\r\n        const { x1, y1 } = startPosition;\r\n        const { x2, y2 } = endPosition;\r\n        if((x1 !== x2) || (y1 !== y2)) { //task has actually been moved\r\n            const task = this.findTask({x1, y1});\r\n            if(task) {\r\n                task.position = {\r\n                    x: x2,\r\n                    y: y2\r\n                };\r\n                updateTask(task);\r\n            }\r\n        }\r\n        this.setState({\r\n            startPosition: undefined\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { columns, tasks } = this.props;\r\n        const taskWidgets = renderTaskWidgets(tasks);\r\n        return (\r\n            <div className='task-grid' style={{width: columns * 96}}>\r\n                <GridLayout cols={columns} width={columns * 96}\r\n                    rowHeight={96} margin={[0, 0]}\r\n                    preventollision={true}\r\n                    compactType={null}\r\n                    onDragStop={(_unused1, _unused2, {x, y}) => this.moveTask({x2: x, y2: y})}\r\n                    onDragStart={(_unused1, {x, y}) => { this.setState({startPosition: { x1: x, y1: y }})}}>\r\n                        { taskWidgets }\r\n                </GridLayout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskGrid;\r\n","class UUID {\r\n    static getRandom() {\r\n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n            (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n        );\r\n    }\r\n}\r\n\r\nexport default UUID;\r\n","import React from 'react'\r\n\r\nimport './VisualGrid.css'\r\n\r\nexport default function({ fields }) {\r\n    return (\r\n        <div className='visual-grid'>\r\n            { fields }\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport ActionContext from '../context/ActionContext'\r\nimport Field from './Field'\r\nimport NewTaskWizard from './NewTaskWizard'\r\nimport TaskEditorPanel from './TaskEditorPanel'\r\nimport TaskGrid from './TaskGrid'\r\nimport TaskService from '../service/taskService'\r\nimport UUID from '../util/UUID'\r\nimport VisualGrid from './VisualGrid'\r\nimport { setPropertyValue } from '../util/objectUtils'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.taskService = new TaskService();\r\n        this.state = {\r\n            width: document.documentElement.clientWidth,\r\n            height: document.documentElement.clientHeight,\r\n            createNew: false,\r\n            tasks: this.taskService.getTasks()\r\n        };\r\n\r\n        this.addTask = this.addTask.bind(this);\r\n        this.saveTask = this.saveTask.bind(this);\r\n        this.editTask = this.editTask.bind(this);\r\n        this.cancelEdit = this.cancelEdit.bind(this);\r\n        this.deleteTask = this.deleteTask.bind(this);\r\n        this.windowSize = this.windowSize.bind(this);\r\n        this.modifyTasks = this.modifyTasks.bind(this);\r\n        this.cancelAddTask = this.cancelAddTask.bind(this);\r\n        this.editTaskProperty = this.editTaskProperty.bind(this);\r\n        this.calcBoardDimensions = this.calcBoardDimensions.bind(this);\r\n        window.addEventListener('resize', this.windowSize);\r\n    }\r\n\r\n    windowSize() {\r\n        this.setState({\r\n            width: document.documentElement.clientWidth,\r\n            height: document.documentElement.clientHeight\r\n        });\r\n    }\r\n\r\n    calcBoardDimensions() {\r\n        const columns = Math.floor(this.state.width / 96) + 1;\r\n        const rows = Math.floor(this.state.height / 96) + 1;\r\n        let xCorrection = (columns * 96) - this.state.width;\r\n        let yCorrection = (rows * 96) - this.state.height;\r\n        return {\r\n            columns: columns,\r\n            rows: rows,\r\n            xCorrection: xCorrection + 1,\r\n            yCorrection: yCorrection\r\n        };\r\n    }\r\n\r\n    addTask({ x, y }) {\r\n        this.setState({\r\n            edit: true,\r\n            newPosition: {\r\n                x: x,\r\n                y: y\r\n            }\r\n        });\r\n    }\r\n\r\n    modifyTasks(fn) {\r\n        let { tasks } = this.state;\r\n        tasks = fn(tasks);\r\n        this.setState({\r\n            tasks: tasks\r\n        });\r\n        this.taskService.saveTasks(tasks);\r\n    }\r\n\r\n    editTask(task) {\r\n        this.setState({editTask: Object.assign({}, task)});\r\n    }\r\n\r\n    cancelEdit() {\r\n        this.setState({editTask: null});\r\n    }\r\n\r\n    editTaskProperty(property, value) {\r\n        let { editTask } = this.state;\r\n        editTask = setPropertyValue(editTask, property, value);\r\n        this.setState({editTask: editTask});\r\n    }\r\n\r\n    //TODO: auf irgendeine Weise werden beim (Editieren eines bestehenden) Timer\r\n    //      alle Werte korrekt gespeichert (siehe `localStorage`). Der angezeigte\r\n    //      `remainingTime`-Wert ändert sich allerdings erst nach neu Laden der\r\n    //      Seite - wie kann das sein? Werden nicht alle Properties des Objektes\r\n    //      übertragen?\r\n    saveTask(toBeSaved) {\r\n        this.modifyTasks(tasks => {\r\n            if(toBeSaved.id === null) {\r\n                toBeSaved.id = UUID.getRandom();\r\n                tasks.push(toBeSaved);\r\n            } else {\r\n                tasks = tasks.map(task => {\r\n                    if(task.id === toBeSaved.id) {\r\n                        return toBeSaved;\r\n                    } else {\r\n                        return task;\r\n                    }\r\n                });\r\n            }\r\n            this.setState({editTask: null});\r\n            return tasks;\r\n        });\r\n    }\r\n\r\n    deleteTask(toBeDeleted) {\r\n        this.modifyTasks(tasks => {\r\n            if(toBeDeleted.id !== null) {\r\n                tasks = tasks.filter(task => task.id !== toBeDeleted.id)\r\n            }\r\n            this.setState({editTask: null});\r\n            return tasks;\r\n        })\r\n    }\r\n\r\n    cancelAddTask() {\r\n        this.setState({\r\n            edit: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const dimensions = this.calcBoardDimensions();\r\n        let fields = [];\r\n        for(let i = 0; i < (dimensions.columns * dimensions.rows); i++) {\r\n            fields[i] = (\r\n                <Field key={i} size={96}\r\n                    boardDimensions={dimensions}\r\n                    action={this.addTask} index={i}>\r\n                </Field>\r\n            );\r\n        }\r\n        return (\r\n            <div className='board' style={{\r\n                marginRight: -dimensions.xCorrection,\r\n                marginBottom: -dimensions.yCorrection\r\n            }}>\r\n                <ActionContext.Provider value={{\r\n                    save: this.saveTask,\r\n                    remove: this.deleteTask,\r\n                    edit: this.editTask\r\n                }}>\r\n                    <NewTaskWizard active={this.state.edit}\r\n                        position={this.state.newPosition}\r\n                        cancel={this.cancelAddTask}\r\n                        save={this.saveTask}>\r\n                    </NewTaskWizard>\r\n                    <TaskGrid tasks={this.state.tasks}\r\n                        columns={dimensions.columns - 1}\r\n                        updateTask={this.saveTask}>\r\n                    </TaskGrid>\r\n                    <VisualGrid fields={fields} />\r\n                    { this.state.editTask && (\r\n                        <TaskEditorPanel task={this.state.editTask}\r\n                            save={this.saveTask} remove={this.deleteTask}\r\n                            editProperty={this.editTaskProperty}\r\n                            action={this.cancelEdit}>\r\n                        </TaskEditorPanel>\r\n                    )}\r\n                </ActionContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react'\r\n\r\nimport Icon from './Icon'\r\n\r\nimport './ThemeControlButton.css'\r\n\r\nexport default function({ theme, active, setTheme }) {\r\n    const { button } = theme;\r\n    return (\r\n        <span className={'theme-control-button' + (\r\n            active ? '' : ' enabled'\r\n        )} style={{\r\n            color: button.color,\r\n            background: button.background\r\n        }}>\r\n            <Icon name={button.icon} onClick={() => setTheme(theme)} size='lg' />\r\n        </span>\r\n    );\r\n}","import React from 'react'\r\n\r\nconst ThemeContext = React.createContext('theme');\r\n\r\nexport default ThemeContext;\r\n","export default {\r\n    light: {\r\n        id: 'light',\r\n        className: 'theme-light',\r\n        button: {\r\n            icon: 'sun',\r\n            color: 'rgba(42, 42, 46, 1)',\r\n            background: '#fff'\r\n        }\r\n    },\r\n    dark: {\r\n        id: 'dark',\r\n        className: 'theme-dark',\r\n        button: {\r\n            icon: 'moon',\r\n            color: '#fff',\r\n            background: 'rgba(42, 42, 46, 1)'\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport ThemeControlButton from './ThemeControlButton'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport themes from '../assets/themes'\r\n\r\nimport './ThemeSwitcher.css'\r\n\r\nclass ThemeSwitcher extends Component {\r\n    render() {\r\n        return (\r\n            <ThemeContext.Consumer>\r\n            {({ setTheme, isActive }) => {\r\n                return (\r\n                    <div className='theme-switcher'>\r\n                    {\r\n                        Object.values(themes).map(theme => {\r\n                            return (\r\n                                <ThemeControlButton theme={theme}\r\n                                    setTheme={setTheme}\r\n                                    active={isActive(theme)}>\r\n                                </ThemeControlButton>\r\n                            );\r\n                        })\r\n                    }\r\n                    </div>\r\n                );\r\n            }}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeSwitcher;","import themes from '../assets/themes'\r\n\r\nexport default class ThemeService {\r\n    getTheme = () => {\r\n        let storedTheme = window.localStorage.getItem('theme');\r\n        if(storedTheme) {\r\n            const themeId = JSON.parse(storedTheme);\r\n            const filteredThemes = Object.values(themes).filter(theme => theme.id === themeId);\r\n            if(filteredThemes.length === 1) {\r\n                storedTheme = filteredThemes[0];\r\n            } else {\r\n                storedTheme = undefined;\r\n            }\r\n        }\r\n        if(!storedTheme) {\r\n            storedTheme = themes.light;\r\n        }\r\n        return storedTheme;\r\n    }\r\n    setTheme = (theme) => {\r\n        theme = JSON.stringify(theme.id);\r\n        window.localStorage.setItem('theme', theme);\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport './Control.css'\r\n\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className='control-wrapper'>\r\n                <div className='control'>\r\n                    <ThemeSwitcher />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react'\r\n\r\nimport Board from './Board'\r\nimport Control from './Control'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport ThemeService from '../service/themeService'\r\n\r\nimport './App.css';\r\nimport './AppThemes.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.themeService = new ThemeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            theme: this.themeService.getTheme()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'app' + (this.state.theme ? ` ${this.state.theme.className}`: '')}>\r\n                <ThemeContext.Provider value={{\r\n                    setTheme: (theme) => {\r\n                        this.setState({theme: theme});\r\n                        this.themeService.setTheme(theme);\r\n                    },\r\n                    isActive: (theme) => {\r\n                        return (this.state.theme ? this.state.theme.id === theme.id : false);\r\n                    }\r\n                }}>\r\n                    {/*<Control />*/}\r\n                    <Board />\r\n                </ThemeContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport WebFont from 'webfontloader'\r\n\r\nimport icons from './assets/icons';\r\nimport App from './components/App'\r\nimport './index.css'\r\nimport './util.css'\r\n\r\nicons.load();\r\nWebFont.load({\r\n    google: {\r\n        families: ['Quicksand:500,700', 'sans-serif']\r\n    }\r\n});\r\ndocument.title = 'Jaquu - Algoristic Timer';\r\nReactDOM.render(<App/>, document.querySelector('#root'));\r\n"],"sourceRoot":""}